{"version":3,"sources":["components/Result/oops.png","components/Button/Button.js","components/WordCounter/WordCounter.js","components/Slider/Slider.js","components/Sidebar/Sidebar.js","components/TextInput/TextInput.js","components/Header/Header.js","components/AddRemove/AddRemove.js","components/Cell/Cell.js","components/Result/Result.js","components/Saved/Saved.js","components/Main/Main.js","config/init.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","state","active","value","handleClick","bind","this","setState","removeTerm","setTerm","className","onClick","getStyleClass","text","React","Component","defaultProps","WordCounter","maxWords","Slider","handleChange","e","setCount","target","type","step","onChange","min","max","defaultValue","count","Sidebar","buttons","map","x","key","name","search","makeButtons","TextInput","setInput","placeholder","Header","AddRemove","saveWord","word","Cell","setStyle","removeWord","Result","load","results","length","input","console","log","id","src","oops","alt","isLoading","makeResults","Saved","saved","makeSaved","Main","init","enabled","defaultCount","getInitValues","filter","App","searchTerms","loading","setSearchTerm","removeSearchTerm","term","updatedTerm","push","filtered","request","index","join","fetch","buildRequest","then","response","status","alert","json","catch","Error","message","tmpSave","includes","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9b77cd46.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oops.02bd0963.png\";","import React from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { active: this.props.active, value: this.props.value };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  getStyleClass() {\r\n    if (this.state.active) {\r\n      return '';\r\n    } else {\r\n      return 'disabled';\r\n    }\r\n  }\r\n  handleClick() {\r\n    if (this.state.active === true) {\r\n      this.setState({ active: false });\r\n      this.props.removeTerm(this.state.value);\r\n    } else {\r\n      this.setState({ active: true });\r\n      this.props.setTerm(this.state.value);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Button\" onClick={this.handleClick}>\r\n        <h3 className={'ButtonText ' + this.getStyleClass()}>\r\n          {this.props.text}\r\n        </h3>\r\n        <div className={'ButtonState flexCenter ' + this.getStyleClass()}>\r\n          <h3>{this.state.active === true ? 'ON' : 'OFF'}</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nButton.defaultProps = { text: 'Template' };\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './WordCounter.css';\r\n\r\nclass WordCounter extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"WordCounter\">\r\n        <h4>max words: &nbsp; </h4>\r\n        <h4> {this.props.maxWords} </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WordCounter;\r\n","import React from 'react';\r\nimport './Slider.css';\r\nimport WordCounter from '../WordCounter/WordCounter';\r\n\r\nclass Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.props.setCount(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Slider\">\r\n        <input\r\n          type=\"range\"\r\n          className=\"sliderInput\"\r\n          step=\"1\"\r\n          onChange={this.handleChange}\r\n          min={this.props.min}\r\n          max={this.props.max}\r\n          defaultValue={this.props.count}\r\n        />\r\n        <WordCounter maxWords={this.props.count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSlider.defaultProps = {\r\n  min: 1,\r\n  max: 25\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport './Sidebar.css';\r\nimport Button from '../Button/Button';\r\nimport Slider from '../Slider/Slider';\r\n\r\nclass Sidebar extends React.Component {\r\n  makeButtons() {\r\n    return this.props.buttons.map(x => (\r\n      <Button\r\n        key={x.name}\r\n        text={x.name}\r\n        active={x.active}\r\n        value={x.value}\r\n        search={this.props.search}\r\n        setTerm={this.props.setTerm}\r\n        removeTerm={this.props.removeTerm}\r\n      />\r\n    ));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <h2 className=\"sidebarTitle\">Options</h2>\r\n        <div className=\"buttonContainer\">\r\n          {this.makeButtons()}\r\n          <Slider count={this.props.count} setCount={this.props.setCount} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport './TextInput.css';\r\n\r\nclass TextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    this.props.setInput(e.target.value);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"TextInput\">\r\n        <input onChange={this.handleChange} type=\"text\" placeholder=\"Write a word here\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport TextInput from '../TextInput/TextInput';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"title\">\r\n          <h1>One</h1>\r\n          <h1>&nbsp;&nbsp;&nbsp;Word</h1>\r\n          <h1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Please</h1>\r\n        </div>\r\n        <TextInput setInput={this.props.setInput} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './AddRemove.css';\r\n\r\nclass AddRemove extends React.Component {\r\n  handleClick() {\r\n    this.props.saveWord(this.props.word);\r\n  }\r\n  render() {\r\n    return (\r\n      <div onClick={this.handleClick.bind(this)} className=\"AddRemove\">\r\n        <h3>{this.props.text}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddRemove;\r\n","import React from 'react';\r\nimport './Cell.css';\r\nimport AddRemove from '../AddRemove/AddRemove';\r\n\r\nclass Cell extends React.Component {\r\n  setStyle() {\r\n    return this.props.type === 'saved' ? 'saved' : 'result';\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={'Cell ' + this.setStyle()}>\r\n        <h3 className=\"cellText\">{this.props.text}</h3>\r\n        <AddRemove\r\n          word={this.props.text}\r\n          saveWord={\r\n            this.props.type === 'saved'\r\n              ? this.props.removeWord\r\n              : this.props.saveWord\r\n          }\r\n          text={this.props.type === 'saved' ? '-' : '+'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React from 'react';\r\nimport './Result.css';\r\nimport Cell from '../Cell/Cell';\r\nimport oops from './oops.png';\r\n\r\nclass Result extends React.Component {\r\n  isLoading() {\r\n    if (this.props.load) {\r\n      return <div className=\"loading_ON\"></div>;\r\n    }\r\n  }\r\n  makeResults() {\r\n    if (this.props.results.length === 0 && !this.props.load && this.props.input) {\r\n      console.log('Oh hello');\r\n      return (\r\n        <div>\r\n          <img id=\"oops\" src={oops} alt=\"nothing found\"></img>\r\n        </div>\r\n      );\r\n    } else {\r\n      return this.props.results.map((x) => (\r\n        <Cell saveWord={this.props.saveWord} type=\"result\" key={x.word} text={x.word} />\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Result\">\r\n        <h2 className=\"resultTitle\">Results</h2>\r\n        <div className=\"loadingContainer flexCenter\">{this.isLoading()}</div>\r\n        <div className=\"cellContainer flexCenter\">{this.makeResults()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport './Saved.css';\r\nimport Cell from '../Cell/Cell';\r\n\r\nclass Saved extends React.Component {\r\n  makeSaved() {\r\n    return this.props.saved.map(x => (\r\n      <Cell removeWord={this.props.removeWord} type=\"saved\" key={x} text={x} />\r\n    ));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Saved\">\r\n        <h2 className=\"savedTitle\">Saved</h2>\r\n        <div className=\"cellContainer flexCenter\">{this.makeSaved()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React from 'react';\r\nimport './Main.css';\r\nimport Header from '../Header/Header';\r\nimport Result from '../Result/Result';\r\nimport Saved from '../Saved/Saved';\r\n\r\nclass Main extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Main\">\r\n        <Header setInput={this.props.setInput} />\r\n        <div className=\"resultContainer\">\r\n          <Result\r\n            saveWord={this.props.saveWord}\r\n            results={this.props.results}\r\n            load={this.props.load}\r\n            input={this.props.input}\r\n          />\r\n          <Saved removeWord={this.props.removeWord} saved={this.props.saved} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","// init file\r\n\r\nexport const init = {\r\n  buttons: [\r\n    { name: 'Ryhme', active: false, value: 'rel_rhy=', enabled: 'true' },\r\n    { name: 'Sounds like', active: false, value: 'sl=', enabled: 'true' },\r\n    { name: 'Same meaning', active: true, value: 'rel_syn=', enabled: 'true' },\r\n    {\r\n      name: 'Describe',\r\n      active: false,\r\n      value: 'rel_jjb=',\r\n      enabled: 'true'\r\n    },\r\n    {\r\n      name: 'Antonym',\r\n      active: false,\r\n      value: 'rel_ant=',\r\n      enabled: 'true'\r\n    }\r\n  ],\r\n\r\n  defaultCount: 6,\r\n\r\n  getInitValues() {\r\n    return this.buttons.filter(x => x.active).map(x => x.value);\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport Main from '../Main/Main';\r\nimport { init } from '../../config/init';\r\n\r\n// onewordplease.surge.sh\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchTerms: init.getInitValues(),\r\n      input: '',\r\n      results: [],\r\n      saved: [],\r\n      loading: false,\r\n      count: init.defaultCount,\r\n    };\r\n    this.setSearchTerm = this.setSearchTerm.bind(this);\r\n    this.removeSearchTerm = this.removeSearchTerm.bind(this);\r\n    this.setCount = this.setCount.bind(this);\r\n    this.setInput = this.setInput.bind(this);\r\n    this.saveWord = this.saveWord.bind(this);\r\n    this.removeWord = this.removeWord.bind(this);\r\n  }\r\n  setInput(input) {\r\n    this.setState({ input: input }, () => this.search());\r\n  }\r\n  setCount(count) {\r\n    this.setState({ count: count }, () => this.search());\r\n  }\r\n  setSearchTerm(term) {\r\n    const updatedTerm = this.state.searchTerms;\r\n    updatedTerm.push(term);\r\n    this.setState({ searchTerms: updatedTerm }, () => this.search());\r\n  }\r\n  removeSearchTerm(term) {\r\n    const filtered = this.state.searchTerms.filter((x) => !(x === term));\r\n    this.setState({ searchTerms: filtered }, () => this.search());\r\n  }\r\n  buildRequest() {\r\n    let request = 'https://cors-anywhere.herokuapp.com/https://api.datamuse.com/words?';\r\n    request +=\r\n      this.state.searchTerms\r\n        .map((x, index) => {\r\n          if (index === 0) {\r\n            return x + this.state.input;\r\n          } else {\r\n            return '&' + x + this.state.input;\r\n          }\r\n        })\r\n        .join('') +\r\n      '&max=' +\r\n      this.state.count;\r\n    return request;\r\n  }\r\n  search() {\r\n    this.setState({ loading: true });\r\n    fetch(this.buildRequest())\r\n      .then((response) => {\r\n        console.log(response);\r\n        if (response.status === 429) {\r\n          this.setState({ results: [], loading: false });\r\n          alert('Too many requests, please wait a bit.');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ results: response, loading: false });\r\n      })\r\n      .catch((e) => new Error(e.message));\r\n  }\r\n  saveWord(word) {\r\n    let tmpSave = this.state.saved;\r\n    if (!tmpSave.includes(word)) {\r\n      tmpSave.push(word);\r\n    }\r\n    this.setState({ saved: tmpSave });\r\n  }\r\n  removeWord(word) {\r\n    let tmpRemove = this.state.saved;\r\n    const filtered = tmpRemove.filter((x) => !(x === word));\r\n    this.setState({ saved: filtered });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Sidebar\r\n          buttons={init.buttons}\r\n          search={this.search}\r\n          setTerm={this.setSearchTerm}\r\n          removeTerm={this.removeSearchTerm}\r\n          setCount={this.setCount}\r\n          count={this.state.count}\r\n          setInput={this.setInput}\r\n        />\r\n        <Main\r\n          saveWord={this.saveWord}\r\n          removeWord={this.removeWord}\r\n          saved={this.state.saved}\r\n          results={this.state.results}\r\n          setInput={this.setInput}\r\n          load={this.state.loading}\r\n          input={this.state.input}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}